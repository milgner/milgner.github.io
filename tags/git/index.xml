<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Marcus Ilgner</title>
    <link>https://marcusilgner.com/tags/git/</link>
    <description>Recent content in git on Marcus Ilgner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 03 Jun 2021 14:45:31 +0200</lastBuildDate><atom:link href="https://marcusilgner.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Bit of Git Part 3: Rebase</title>
      <link>https://marcusilgner.com/posts/2021-06-03-a-bit-of-git-part-3-rebase/</link>
      <pubDate>Thu, 03 Jun 2021 14:45:31 +0200</pubDate>
      
      <guid>https://marcusilgner.com/posts/2021-06-03-a-bit-of-git-part-3-rebase/</guid>
      <description>A bit of git (each day) - Part 3: Rebase    Once you are fluent in the use of the basic git commands add, rm, checkout, commit and branch, it is time to look at the next most important bit of it: rebase.
In the last excursion on the subject of branching strategies, git rebase was mentioned a couple of times so it makes sense to have a closer look at it.</description>
    </item>
    
    <item>
      <title>A Bit of Git Part 2: Branching Strategies</title>
      <link>https://marcusilgner.com/posts/2021-05-30-a-bit-of-git-part-2-branching-strategies/</link>
      <pubDate>Sun, 30 May 2021 14:54:35 +0200</pubDate>
      
      <guid>https://marcusilgner.com/posts/2021-05-30-a-bit-of-git-part-2-branching-strategies/</guid>
      <description>A bit of git (each day) - Part 2: Branching Strategies    After a short introduction to the git basics, we should talk about branching. If you work on your own, you&amp;rsquo;re free to name your branches any way you like - but if you try to develop software in a team, that&amp;rsquo;s a clear recipe for chaos.
What&amp;rsquo;s a branching strategy?    To solve this issue, you&amp;rsquo;ll have to communicate among your team to specify a branching strategy which defines how to name your branches, how different branches are merged into another and usually also have a say in which version of your software gets deployed or delivered to your users.</description>
    </item>
    
    <item>
      <title>A Bit of Git Part 1</title>
      <link>https://marcusilgner.com/posts/2021-05-29-a-bit-of-git-part-1/</link>
      <pubDate>Sat, 29 May 2021 14:08:33 +0200</pubDate>
      
      <guid>https://marcusilgner.com/posts/2021-05-29-a-bit-of-git-part-1/</guid>
      <description>A bit of git (each day) - Part 1: Basics    Since its inception in 2005, git has quickly established itself as the de-facto standard for version control in software development.
Yet I find that surprisingly many developers struggle with using it to its full potential even after many years of having been in contact with it. There is an excellent book &amp;ldquo;Pro Git&amp;rdquo; available online but for some reason not many people are familiar with its contents or are lacking some focussed exposure to the many aspects therein.</description>
    </item>
    
  </channel>
</rss>
